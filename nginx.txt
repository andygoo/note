
=================================================
Nginx安装
yum -y install gcc gcc-c++
yum -y install openssl openssl-devel
yum -y install pcre pcre-devel 
yum -y install zlib zlib-devel
一般我们都需要先装pcre, zlib，前者为了重写rewrite，后者为了gzip压缩。

groupadd www
useradd www -g www

wget http://iweb.dl.sourceforge.net/project/pcre/pcre/8.36/pcre-8.36.tar.gz
wget http://iweb.dl.sourceforge.net/project/libpng/zlib/1.2.8/zlib-1.2.8.tar.gz
wget http://nginx.org/download/nginx-1.4.7.tar.gz

./configure \
--prefix=/usr/local/nginx \
--with-http_ssl_module \
--with-pcre=../pcre-8.36 \
--with-zlib=../zlib-1.2.8 \
--user=www \
--group=www \

启动：/usr/local/nginx/sbin/nginx
停止：/usr/local/nginx/sbin/nginx -s stop
重启：/usr/local/nginx/sbin/nginx -s reload

ps -ef|grep nginx

vi /etc/init.d/nginx
chmod +x /etc/init.d/nginx

chkconfig --add /etc/init.d/nginx 将nginx服务加入chkconfig管理列表
chkconfig nginx on  设置终端模式开机启动

service nginx start

===================================================

//备份下原来老的nginx文件
sudo mv /usr/local/webservice/nginx/sbin/nginx /usr/local/webservice/nginx/sbin/nginx.old
//进入objs目录拷贝nginx文件
cd objs
sudo cp nginx /usr/local/webserver/nginx/sbin/nginx
//测试看看
/usr/local/webserver/nginx/sbin/nginx -t
//返回上级目录
cd ../
//升级nginx
sudo make upgrade

====================================================

server {
	listen       80;
	server_name  localhost;
    index  index.php index.html index.htm;
    root   /data/wwwroot/default;

	location ~ \.php$ {
		include fastcgi.conf;
		fastcgi_pass   127.0.0.1:9000;
	}
	
	location / {
		try_files $uri $uri/ /index.php?$args;
	}
}
====================================================
server {
	listen       80;
	server_name  haocheweb.com *.haocheweb.com;
    index  index.php index.html index.htm;
    root   D:/web_mainsite_v1/;
	
	location ~ \.php$ {
		fastcgi_pass   127.0.0.1:9000;
		include fastcgi.conf;
	}
	
	location / {
		try_files $uri $uri/ /index.php?$args;
	}
	
	location ~ \.(js|css|jpg|jpeg|png|gif|ico)$ {
        access_log off;
        log_not_found off; 
		#expires max;
    }
	
	error_page  500 502 503 504  /50x.html;
	location = /50x.html {
		root   html;
	}
	
	location ^~ /.git {
		deny all;
    }
	
	#add_header Set-Cookie 'UUID=uuid; expires=31 Dec 2099 23:55:55 GMT';
	if ($http_cookie ~* "HCUID=(\S+)(;.*|$)"){
		set $hcuid $1;
	}
	
	access_log logs/haoche51_web_access.log haoche51_web;
	error_log logs/haoche51_web_error.log;
	#error_log /dev/null crit;
}

====================================================

Nginx 反向代理
server {
	listen          80;
	server_name     t.vpser.net;

	location / {
		proxy_pass              http://twitter.com/;
		proxy_redirect          off;
		proxy_set_header    	Host            $host;
		proxy_set_header        X-Real-IP       $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	}
}

=======================================================

#WebSocket Proxy
server {
    listen       80;
    server_name  ws.example.com;

    location / {
        access_log off;
        proxy_pass http://ws.example.com:10080;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # WebSocket support (nginx 1.4)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

=======================================================

Nginx 负载均衡
upstream a.com {
	ip_hash 
	server  192.168.1.2:80;
	server  192.168.1.3:80;
	#server  127.0.0.1:8080 backup;
}
#ip_hash 指令解决session共享问题
#ip_hash 和 backup 指令不能同时使用

========================================================

Nginx的防盗链
location ~* \.(gif|jpg|png|swf|flv)$ {
	valid_referers none blocked www.mydomain.com *.mydomain.com; 
	if ($invalid_referer) {
		return 403;
	}
}

========================================================

## Deny access to any host other than (www.).你的域名.com
server {
	server_name _; #default
	return 444;
}

========================================================

server_tokens off; #关闭nginx版本号

gzip  on;
gzip_min_length 1k;
gzip_buffers 4 16k;
#gzip_http_version 1.0; #用了反向代理的话，末端通信是HTTP/1.0，默认是HTTP/1.1
gzip_comp_level 2;
gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/javascript application/x-httpd-php image/jpeg image/gif image/png;
gzip_vary off; #跟Squid等缓存服务有关，on的话会在Header里增加"Vary: Accept-Encoding"
gzip_disable "MSIE [1-6]\.";

log_format  haoche51_web  '$remote_addr - $remote_user [$time_local] "$request" '
				  '$status $body_bytes_sent "$http_referer" '
				  '"$http_user_agent" "$http_x_forwarded_for" "$request_time" "$hcuid"';

========================================================